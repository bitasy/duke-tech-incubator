Brian Nieves: I've always been focused on supporting my teammates in the project this semester. I spearheaded the use and management of features via git and separate web servers. The features I worked on included advanced search, user profiles, order and tag forms, etc. But I also spent a lot of time making sure the organization of the code was clean. One way to do that was by abstracting out commonly used handlebars code to a partial. Or more drastically, for example, we realized near the end of the project that products could no longer be stored in the order_items table and I made the changes to the code to use a new table. This involved handling merge conflicts between my group member's code, which I mainly handled since the milestone.

Elizabeth Chiu: Over the course of semester, I’ve worked on some small organizational stuff and then UI and UX design for our website.I helped design the initial E/R diagram and have updated it whenever we’ve received feedback or made changes to our database schema. I also wrote/compiled most of the two milestone write-ups. For the website, I made the “add projects” page, and then I made the individual project pages and implemented the functionality that redirects you from the home page to an individual project page with Jeffrey. I also worked on the implementation of the orders appearing on individual project pages with Brian. 

Jeffrey Li: Throughout the semester I had both coding and non coding roles. I handled the business side by reaching out and organising meetings with professors to pitch our idea and get them on board as mentors. I then gathered their information and put it into the database. For the actual website, I handled the initial UI and UX design, made the original template of the home page, made the individual project’s details page, and implemented the functionality that allows you to click on a project on the home page to see its project page details.

Since the last milestone, I have implemented the full stack of two features. Firstly, a search bar that allows users to filter the results on the main page table by name, and secondly, I implemented edit project functionality which takes information from an html form and updates the relevant table in the database.

Sherry Feng: I built a number of features in our project: add a project, create a profile, and join a project, and some error-checking functionalities. For each of these features, I implemented all the steps in their full work steam: creating a handlebars template for the html, making sure these were routed correctly in their respective routers file and app.js, editing the controller to correctly call the model (and, usually, to correctly call a callback within a callback), and then editing the queries and javascript within the model. I got comfortable with understanding form POST requests and callback functions, as we would oftentimes have multi-statement queries that would need to be processed again after one run. Using this, I was able to integrate some error handling, namely fixing that our server crashed upon seeing errors by instead logging the errors and parsing them into a readable message to be displayed on screen. 
